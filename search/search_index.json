{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":"<p>Back in the mists of time, in the days of MS-DOS and Clipper programming, Norton Guide database files were a very popular form of hypertext help. Lots of information is still kicking around inside such files. Over the years I've developed a reasonably long line of tools to help keep that information available. Recently I realised that I'd never written anything to access NG files from Python.</p> <p>This library seeks to address that.</p> <p>The reason for a library, as opposed to another converter or reader, is that I actually do want to (and as of the time of writing have started to) develop a new family of tools, that are nicely cross-platform, and will serve the command line, the CHUI, the GUI and web interfaces. To make this happen it makes sense that a solid core library for Norton Guide database access is developed.</p> <p>This is that library.</p>"},{"location":"#installing","title":"Installing","text":"<p><code>ngdb</code> is available from pypi and can be installed with <code>pip</code> or similar Python package tools:</p> <pre><code>$ pip install ngdb\n</code></pre>"},{"location":"#requirements","title":"Requirements","text":"<p>The only requirement for this library, other than the standard Python library, is <code>typing-extensions</code>.</p>"},{"location":"#source","title":"Source","text":"<p>The source for this library can always be found in its GitHub repository.</p> <pre><code>git clone git@github.com:davep/ngdb.py.git\n</code></pre>"},{"location":"guide/","title":"Using ngdb","text":""},{"location":"guide/#introduction","title":"Introduction","text":"<p>The library is designed to provide a method of opening and reading Norton Guide database files. The code here provides no methods for rendering the content; there is no converter, no reader application, etc; the library is designed to be the core of such tools.</p> <p>Information</p> <p>One such tool, which as of the time of writing is a work in progress, is <code>ng2web</code> -- a template-driven tool that converts Norton Guide databases into HTML.</p> <p>Another tool that uses this library is AgiNG, a fully-featured Norton Guide reader for the terminal.</p> <p>The main class is <code>NortonGuide</code>. When called, with the path to a Norton Guide file, it will open up the guide, load up all the key information, and provide an interface for loading up the short and long entries, loading up the menus, providing access to see-also items, etc.</p> <p>At this point it probably goes without saying that <code>ngdb</code> is likely only really useful to anyone who knows what a Norton Guide is and cares about the content. As such, at least for the moment, this documentation will (with apologies) assume some knowledge of what a Norton Guide is and its main structure.</p>"},{"location":"guide/#opening-a-guide","title":"Opening a guide","text":"<p>As mentioned above, a guide can be opened using the <code>NortonGuide</code> class. For example:</p> <pre><code>&gt;&gt;&gt; from ngdb import NortonGuide\n&gt;&gt;&gt; guide = NortonGuide(\"tests/guides/oslib.ng\")\n</code></pre> <p>Having loaded the guide you have access to the key information about it:</p> <pre><code>&gt;&gt;&gt; guide.title\n'OSLIB v1.06'\n&gt;&gt;&gt; guide.credits\n('\u00b3 OSLIB v1.06', '\u00b3 OSLIB Is Free Software with NO WARRANTY!', '\u00b3', '\u00b3 This library was compiled by Dave Pearson.', '\u00b3 davep@hagbard.demon.co.uk')\n&gt;&gt;&gt; guide.made_with\n'Norton Guide'\n&gt;&gt;&gt; guide.menu_count\n1\n&gt;&gt;&gt; guide.menus\n(&lt;Menu: OSLIB&gt;,)\n&gt;&gt;&gt; guide.menus[0]\n&lt;Menu: OSLIB&gt;\n&gt;&gt;&gt; guide.menus[0].title\n'OSLIB'\n&gt;&gt;&gt; guide.menus[0].prompts\n('Functions', 'FAQs', 'Revision History', 'Credits', 'About')\n</code></pre> <p>The <code>NortonGuide</code> class can also be used with Python's <code>with</code> statement, making it easy to quickly open a file and work with it. Here's an example of a small tool that will open a guide and prints its title:</p> <pre><code>from ngdb import NortonGuide\n\nif __name__ == \"__main__\":\n    with NortonGuide(\"tests/guides/oslib.ng\") as guide:\n        print(guide.title)\n</code></pre>"},{"location":"guide/#navigating-a-guide","title":"Navigating a guide","text":"<p>Three methods exist for navigating a guide: <code>goto_first</code>, <code>goto</code> and <code>skip</code>. As you may imagine, <code>goto_first</code> goes to the first entry in a guide, <code>goto</code> goes to an entry at a specific byte offset in the guide, and <code>skip</code> skips the current entry.</p> <p>Tip</p> <p>It should be noted here that an open guide has the concept of a location pointer. As you do things with the guide, the location will change.</p> <p>When skipping through a Norton Guide, if you try and skip off the end of the file, an <code>NGEOF</code> exception will be thrown.</p> <p>Here's a simple example of all of this in action:</p> <pre><code>from ngdb import NGEOF, NortonGuide\n\nif __name__ == \"__main__\":\n    with NortonGuide(\"tests/guides/oslib.ng\") as guide:\n        guide.goto_first()\n        while True:\n            print(\"Found an entry\")\n            try:\n                guide.skip()\n            except NGEOF:\n                print(\"Hit the end of the guide!\")\n                break\n</code></pre> <p>While that example is fine for illustrating the <code>NGEOF</code> exception, really it would make more sense to use the <code>eof</code> property:</p> <pre><code>from ngdb import NortonGuide\n\nif __name__ == \"__main__\":\n    with NortonGuide(\"tests/guides/oslib.ng\") as guide:\n        guide.goto_first()\n        while not guide.eof:\n            print(\"Found an entry\")\n            guide.skip()\n</code></pre>"},{"location":"guide/#reading-entries","title":"Reading entries","text":"<p>The most important content of a Norton Guide is its entries. These come in two varieties, short entries and long entries. An entry is loaded using <code>load</code> and the correct type of entry will be returned.</p> <p>Here is an example of walking through a guide and printing out the types of entries found:</p> <pre><code>from ngdb import Long, NortonGuide, Short\n\nif __name__ == \"__main__\":\n    with NortonGuide(\"tests/guides/oslib.ng\") as guide:\n        guide.goto_first()\n        while not guide.eof:\n            entry = guide.load()\n            if isinstance(entry, Short):\n                print(\"Short\")\n            elif isinstance(entry, Long):\n                print(\"Long\")\n            else:\n                print(\"This can't be possible\")\n            guide.skip()\n</code></pre>"},{"location":"guide/#next-steps","title":"Next steps","text":"<p>There's a lot more here that needs documenting, and over time I aim to expand this guide. For now though, if you are familiar with Norton Guide files and what they contain, the above should be enough to get you going with the library.</p> <p>The next step would be to read the lower-level API documentation for the code, especially looking at the full documentation for the following:</p> <ul> <li><code>NortonGuide</code>: for navigating the guide itself.</li> <li><code>Entry</code>: for common entry properties and methods.</li> <li><code>Short</code>: for short entry properties and methods.</li> <li><code>Long</code>: for long entry properties and methods.</li> <li><code>BaseParser</code>: for the base class for entry content   parsers; this is what you'll inherit from if you want to write your own   parser/converter to go from a guide's content to some other format.</li> <li><code>PlainText</code>: an example parser that converts an entry's   text into plain text.</li> <li><code>MarkupText</code>: an example parser that acts as the base   class for parsers/converters that are markup-based; this would be a good   place to inherit from if you want to make a Norton Guide to HTML   converter.</li> <li><code>RichText</code>: an example implementation of   <code>MarkupText</code> that converts the content of an entry to   Rich's markup.</li> </ul>"},{"location":"library-contents/dosify/","title":"ngdb.dosify","text":"<p>Code to support the DOS heritage of most Norton Guide databases.</p>"},{"location":"library-contents/dosify/#ngdb.dosify.DOS_MAP","title":"DOS_MAP  <code>module-attribute</code>","text":"<pre><code>DOS_MAP = maketrans(\n    {\n        0: \" \",\n        1: \"\u263a\",\n        2: \"\u263b\",\n        3: \"\u2665\",\n        4: \"\u2666\",\n        5: \"\u2663\",\n        6: \"\u2660\",\n        7: \"\u2022\",\n        8: \"\u25db\",\n        9: \"\u25cb\",\n        10: \"\u25d9\",\n        11: \"\u2642\",\n        12: \"\u2640\",\n        13: \"\u266a\",\n        14: \"\u266b\",\n        15: \"\u263c\",\n        16: \"\u25ba\",\n        17: \"\u25c4\",\n        18: \"\u2195\",\n        19: \"\u203c\",\n        20: \"\u00b6\",\n        21: \"\u00a7\",\n        22: \"\u25ac\",\n        23: \"\u21a8\",\n        24: \"\u2191\",\n        25: \"\u2193\",\n        26: \"\u2192\",\n        27: \"\u2190\",\n        28: \"\u221f\",\n        29: \"\u2194\",\n        30: \"\u25b2\",\n        31: \"\u25bc\",\n        127: \"\u2302\",\n        128: \"\u00c7\",\n        129: \"\u00fc\",\n        130: \"\u00e9\",\n        131: \"\u00e2\",\n        132: \"\u00e4\",\n        133: \"\u00e0\",\n        134: \"\u00e5\",\n        135: \"\u00e7\",\n        136: \"\u00ea\",\n        137: \"\u00eb\",\n        138: \"\u00e8\",\n        139: \"\u00ef\",\n        140: \"\u00ee\",\n        141: \"\u00ec\",\n        142: \"\u00c4\",\n        143: \"\u00c5\",\n        144: \"\u00c9\",\n        145: \"\u00e6\",\n        146: \"\u00c6\",\n        147: \"\u00f4\",\n        148: \"\u00f6\",\n        149: \"\u00f2\",\n        150: \"\u00fb\",\n        151: \"\u00f9\",\n        152: \"\u00ff\",\n        153: \"\u00d6\",\n        154: \"\u00dc\",\n        155: \"\u00a2\",\n        156: \"\u00a3\",\n        157: \"\u00a5\",\n        158: \"\u20a7\",\n        159: \"\u0192\",\n        160: \"\u00e1\",\n        161: \"\u00ed\",\n        162: \"\u00f3\",\n        163: \"\u00fa\",\n        164: \"\u00f1\",\n        165: \"\u00d1\",\n        166: \"\u00aa\",\n        167: \"\u00ba\",\n        168: \"\u00bf\",\n        169: \"\u2319\",\n        170: \"\u00ac\",\n        171: \"\u00bd\",\n        172: \"\u00bc\",\n        173: \"\u00a1\",\n        174: \"\u00ab\",\n        175: \"\u00bb\",\n        176: \"\u2591\",\n        177: \"\u2592\",\n        178: \"\u2593\",\n        179: \"\u2502\",\n        180: \"\u2524\",\n        181: \"\u2561\",\n        182: \"\u2562\",\n        183: \"\u2556\",\n        184: \"\u2555\",\n        185: \"\u2563\",\n        186: \"\u2551\",\n        187: \"\u2557\",\n        188: \"\u255d\",\n        189: \"\u255c\",\n        190: \"\u255b\",\n        191: \"\u2510\",\n        192: \"\u2514\",\n        193: \"\u2534\",\n        194: \"\u252c\",\n        195: \"\u251c\",\n        196: \"\u2500\",\n        197: \"\u253c\",\n        198: \"\u255e\",\n        199: \"\u255f\",\n        200: \"\u255a\",\n        201: \"\u2554\",\n        202: \"\u2569\",\n        203: \"\u2566\",\n        204: \"\u2560\",\n        205: \"\u2550\",\n        206: \"\u256c\",\n        207: \"\u2567\",\n        208: \"\u2568\",\n        209: \"\u2564\",\n        210: \"\u2565\",\n        211: \"\u2559\",\n        212: \"\u2558\",\n        213: \"\u2552\",\n        214: \"\u2553\",\n        215: \"\u256b\",\n        216: \"\u256a\",\n        217: \"\u251b\",\n        218: \"\u250c\",\n        219: \"\u2588\",\n        220: \"\u2584\",\n        221: \"\u258c\",\n        222: \"\u2590\",\n        223: \"\u2580\",\n        224: \"\u03b1\",\n        225: \"\u00df\",\n        226: \"\u0393\",\n        227: \"\u03c0\",\n        228: \"\u03a3\",\n        229: \"\u03c3\",\n        230: \"\u00b5\",\n        231: \"\u03c4\",\n        232: \"\u03a6\",\n        233: \"\u039b\",\n        234: \"\u03a9\",\n        235: \"\u03b4\",\n        236: \"\u221e\",\n        237: \"\u03c6\",\n        238: \"\u03b5\",\n        239: \"\u2229\",\n        240: \"\u2261\",\n        241: \"\u00b1\",\n        242: \"\u2265\",\n        243: \"\u2264\",\n        244: \"\u2320\",\n        245: \"\u2321\",\n        246: \"\u00f7\",\n        248: \"\u00b0\",\n        249: \"\u2219\",\n        250: \"\u00b7\",\n        251: \"\u221a\",\n        252: \"\u207f\",\n        253: \"\u00b2\",\n        254: \"\u25a0\",\n        255: \"\\xa0\",\n    }\n)\n</code></pre> <p>Map For translating into DOS-a-like characters.</p>"},{"location":"library-contents/dosify/#ngdb.dosify.make_dos_like","title":"make_dos_like","text":"<pre><code>make_dos_like(text)\n</code></pre> <p>Try and make a string from a guide capable of retaining DOS-likeness.</p> <p>Parameters:</p> Name Type Description Default <code>str</code> <p>The text to convert.</p> required <p>Returns:</p> Type Description <code>str</code> <p>The converted text.</p>"},{"location":"library-contents/dosify/#ngdb.dosify.make_dos_like(text)","title":"<code>text</code>","text":""},{"location":"library-contents/entry/","title":"ngdb.entry","text":"<p>Norton guide entry loading and holding code.</p>"},{"location":"library-contents/entry/#ngdb.entry.MAX_LINE_LENGTH","title":"MAX_LINE_LENGTH  <code>module-attribute</code>","text":"<pre><code>MAX_LINE_LENGTH = 1024\n</code></pre> <p>Maximum size of a line we'll look for in a guide.</p>"},{"location":"library-contents/entry/#ngdb.entry.Entry","title":"Entry","text":"<pre><code>Entry(guide)\n</code></pre> <p>Norton Guide database entry class.</p> <p>Parameters:</p> Name Type Description Default <code>GuideReader</code> <p>The reader object for the guide.</p> required"},{"location":"library-contents/entry/#ngdb.entry.Entry(guide)","title":"<code>guide</code>","text":""},{"location":"library-contents/entry/#ngdb.entry.Entry.has_next","title":"has_next  <code>property</code>","text":"<pre><code>has_next\n</code></pre> <p>Is there a next entry?</p>"},{"location":"library-contents/entry/#ngdb.entry.Entry.has_previous","title":"has_previous  <code>property</code>","text":"<pre><code>has_previous\n</code></pre> <p>Is there a previous entry?</p>"},{"location":"library-contents/entry/#ngdb.entry.Entry.has_see_also","title":"has_see_also  <code>property</code>","text":"<pre><code>has_see_also\n</code></pre> <p>Does this entry have any see-also items?</p>"},{"location":"library-contents/entry/#ngdb.entry.Entry.lines","title":"lines  <code>property</code>","text":"<pre><code>lines\n</code></pre> <p>The lines of text in the entry.</p>"},{"location":"library-contents/entry/#ngdb.entry.Entry.next","title":"next  <code>property</code>","text":"<pre><code>next\n</code></pre> <p>The location of the next entry.</p>"},{"location":"library-contents/entry/#ngdb.entry.Entry.offset","title":"offset  <code>property</code>","text":"<pre><code>offset\n</code></pre> <p>The file offset of this entry.</p>"},{"location":"library-contents/entry/#ngdb.entry.Entry.parent","title":"parent  <code>property</code>","text":"<pre><code>parent\n</code></pre> <p>Returns the parent entry information.</p>"},{"location":"library-contents/entry/#ngdb.entry.Entry.previous","title":"previous  <code>property</code>","text":"<pre><code>previous\n</code></pre> <p>The location of the previous entry.</p>"},{"location":"library-contents/entry/#ngdb.entry.Entry.size","title":"size  <code>property</code>","text":"<pre><code>size\n</code></pre> <p>The size of the entry in bytes.</p>"},{"location":"library-contents/entry/#ngdb.entry.Entry.type_id","title":"type_id  <code>property</code>","text":"<pre><code>type_id\n</code></pre> <p>The numeric ID of the type of entry.</p>"},{"location":"library-contents/entry/#ngdb.entry.Entry.__len__","title":"__len__","text":"<pre><code>__len__()\n</code></pre> <p>The number of lines in the entry.</p> <p>Returns:</p> Type Description <code>int</code> <p>The number of lines.</p>"},{"location":"library-contents/entry/#ngdb.entry.Entry.__repr__","title":"__repr__","text":"<pre><code>__repr__()\n</code></pre> <p>Returns a string representation of the object.</p> <p>Returns:</p> Type Description <code>str</code> <p>The name of the type of entry.</p>"},{"location":"library-contents/entry/#ngdb.entry.Entry.__rich__","title":"__rich__","text":"<pre><code>__rich__()\n</code></pre> <p>Support being printed in a Rich-enhanced REPL.</p> <p>Returns:</p> Type Description <code>str</code> <p>Rich-friendly test.</p>"},{"location":"library-contents/entry/#ngdb.entry.Entry.__str__","title":"__str__","text":"<pre><code>__str__()\n</code></pre> <p>Return the text of the entry as a single string.</p> <p>Returns:</p> Type Description <code>str</code> <p>The entry's text.</p>"},{"location":"library-contents/entry/#ngdb.entry.EntryParent","title":"EntryParent","text":"<pre><code>EntryParent(guide)\n</code></pre> <p>Class to load and hold the parent information for an entry.</p> <p>Parameters:</p> Name Type Description Default <code>GuideReader</code> <p>The reader object for the guide.</p> required"},{"location":"library-contents/entry/#ngdb.entry.EntryParent(guide)","title":"<code>guide</code>","text":""},{"location":"library-contents/entry/#ngdb.entry.EntryParent.has_line","title":"has_line  <code>property</code>","text":"<pre><code>has_line\n</code></pre> <p>Does this entry have a parent entry line that points to it?</p>"},{"location":"library-contents/entry/#ngdb.entry.EntryParent.has_menu","title":"has_menu  <code>property</code>","text":"<pre><code>has_menu\n</code></pre> <p>Is there a menu related to this entry?</p>"},{"location":"library-contents/entry/#ngdb.entry.EntryParent.has_prompt","title":"has_prompt  <code>property</code>","text":"<pre><code>has_prompt\n</code></pre> <p>Is there a menu prompt related to this entry?</p>"},{"location":"library-contents/entry/#ngdb.entry.EntryParent.line","title":"line  <code>property</code>","text":"<pre><code>line\n</code></pre> <p>The line in the parent entry that point to this entry.</p> <p>If there is no parent line this will be <code>-1</code>. But also see <code>has_line</code> for a test for a parent entry line.</p>"},{"location":"library-contents/entry/#ngdb.entry.EntryParent.menu","title":"menu  <code>property</code>","text":"<pre><code>menu\n</code></pre> <p>The menu that relates to this entry.</p> <p>If there is no menu, this will be <code>-1</code>. But also see <code>has_menu</code> to test if there is a related menu.</p>"},{"location":"library-contents/entry/#ngdb.entry.EntryParent.offset","title":"offset  <code>property</code>","text":"<pre><code>offset\n</code></pre> <p>The offset of the parent entry, if there is one.</p>"},{"location":"library-contents/entry/#ngdb.entry.EntryParent.prompt","title":"prompt  <code>property</code>","text":"<pre><code>prompt\n</code></pre> <p>The menu prompt related to this entry.</p> <p>If there is no menu prompt, this will be <code>-1</code>. But also see <code>has_prompt</code> to test if there is a related menu prompt.</p>"},{"location":"library-contents/entry/#ngdb.entry.EntryParent.__bool__","title":"__bool__","text":"<pre><code>__bool__()\n</code></pre> <p>Is there a parent entry?</p> <p>Returns:</p> Type Description <code>bool</code> <p><code>True</code> if there is, <code>False</code> if not.</p>"},{"location":"library-contents/entry/#ngdb.entry.Long","title":"Long","text":"<pre><code>Long(guide)\n</code></pre> <p>               Bases: <code>Entry</code></p> <p>Long Norton Guide database entry.</p> <p>Parameters:</p> Name Type Description Default <code>GuideReader</code> <p>The reader object for the guide.</p> required"},{"location":"library-contents/entry/#ngdb.entry.Long(guide)","title":"<code>guide</code>","text":""},{"location":"library-contents/entry/#ngdb.entry.Long.see_also","title":"see_also  <code>property</code>","text":"<pre><code>see_also\n</code></pre> <p>The see-also information for this entry.</p>"},{"location":"library-contents/entry/#ngdb.entry.Long.__getitem__","title":"__getitem__","text":"<pre><code>__getitem__(line)\n</code></pre> <p>Get a line from the entry.</p> <p>Parameters:</p> Name Type Description Default <code>int</code> <p>The lint to get.</p> required <p>Returns:</p> Type Description <code>str</code> <p>The line.</p>"},{"location":"library-contents/entry/#ngdb.entry.Long.__getitem__(line)","title":"<code>line</code>","text":""},{"location":"library-contents/entry/#ngdb.entry.Long.__iter__","title":"__iter__","text":"<pre><code>__iter__()\n</code></pre> <p>The lines in the entry.</p> <p>Returns:</p> Type Description <code>Iterator[str]</code> <p>An iterator of strings that are the lines in the entry.</p>"},{"location":"library-contents/entry/#ngdb.entry.Short","title":"Short","text":"<pre><code>Short(guide)\n</code></pre> <p>               Bases: <code>Entry</code></p> <p>Short Norton Guide database entry.</p> <p>Parameters:</p> Name Type Description Default <code>GuideReader</code> <p>The reader object for the guide.</p> required"},{"location":"library-contents/entry/#ngdb.entry.Short(guide)","title":"<code>guide</code>","text":""},{"location":"library-contents/entry/#ngdb.entry.Short.offsets","title":"offsets  <code>property</code>","text":"<pre><code>offsets\n</code></pre> <p>The offsets for each of the lines in the entry.</p>"},{"location":"library-contents/entry/#ngdb.entry.Short.__getitem__","title":"__getitem__","text":"<pre><code>__getitem__(line)\n</code></pre> <p>Get a line and its offset.</p> <p>Parameters:</p> Name Type Description Default <code>int</code> <p>The line to get the link information for.</p> required <p>Returns:</p> Type Description <code>Link</code> <p>The link associated with that line.</p>"},{"location":"library-contents/entry/#ngdb.entry.Short.__getitem__(line)","title":"<code>line</code>","text":""},{"location":"library-contents/entry/#ngdb.entry.Short.__iter__","title":"__iter__","text":"<pre><code>__iter__()\n</code></pre> <p>The lines in the entry along with the offsets into the guide.</p> <p>Returns:</p> Type Description <code>Iterator[Link]</code> <p>An iterator of link data.</p>"},{"location":"library-contents/guide/","title":"ngdb.guide","text":"<p>Defines the class for opening and managing a Norton Guide database.</p>"},{"location":"library-contents/guide/#ngdb.guide.EOFResult","title":"EOFResult  <code>module-attribute</code>","text":"<pre><code>EOFResult = TypeVar('EOFResult')\n</code></pre> <p>Return type of a method decorated with <code>@not_eof</code>.</p>"},{"location":"library-contents/guide/#ngdb.guide.NortonGuide","title":"NortonGuide","text":"<pre><code>NortonGuide(guide)\n</code></pre> <p>Norton Guide database wrapper class.</p> <p>Parameters:</p> Name Type Description Default <code>str | Path</code> <p>The guide to open.</p> required"},{"location":"library-contents/guide/#ngdb.guide.NortonGuide(guide)","title":"<code>guide</code>","text":""},{"location":"library-contents/guide/#ngdb.guide.NortonGuide.CREDIT_LENGTH","title":"CREDIT_LENGTH  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>CREDIT_LENGTH = 66\n</code></pre> <p>The length of a line in the credits.</p>"},{"location":"library-contents/guide/#ngdb.guide.NortonGuide.MAGIC","title":"MAGIC  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>MAGIC = {'EH': 'Expert Help', 'NG': 'Norton Guide'}\n</code></pre> <p>Lookup for valid database magic markers.</p>"},{"location":"library-contents/guide/#ngdb.guide.NortonGuide.TITLE_LENGTH","title":"TITLE_LENGTH  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>TITLE_LENGTH = 40\n</code></pre> <p>The length of a title in the header.</p>"},{"location":"library-contents/guide/#ngdb.guide.NortonGuide.credits","title":"credits  <code>property</code>","text":"<pre><code>credits\n</code></pre> <p>The credits for the guide.</p>"},{"location":"library-contents/guide/#ngdb.guide.NortonGuide.eof","title":"eof  <code>property</code>","text":"<pre><code>eof\n</code></pre> <p>Are we at the end of the guide?</p>"},{"location":"library-contents/guide/#ngdb.guide.NortonGuide.file_size","title":"file_size  <code>property</code>","text":"<pre><code>file_size\n</code></pre> <p>The size of the guide in bytes.</p>"},{"location":"library-contents/guide/#ngdb.guide.NortonGuide.is_a","title":"is_a  <code>property</code>","text":"<pre><code>is_a\n</code></pre> <p>Is the guide actually a Norton Guide database?</p>"},{"location":"library-contents/guide/#ngdb.guide.NortonGuide.is_open","title":"is_open  <code>property</code>","text":"<pre><code>is_open\n</code></pre> <p>Is the guide open?</p>"},{"location":"library-contents/guide/#ngdb.guide.NortonGuide.made_with","title":"made_with  <code>property</code>","text":"<pre><code>made_with\n</code></pre> <p>The name of the tool that was used to make the guide.</p>"},{"location":"library-contents/guide/#ngdb.guide.NortonGuide.magic","title":"magic  <code>property</code>","text":"<pre><code>magic\n</code></pre> <p>The magic value for the guide.</p> <p>This tells us if the file is likely a Norton Guide database or not. It's always a two-character string and, normally, is <code>NG</code>. However, if the guide was made for Expert Help, it could be <code>EH</code>.</p>"},{"location":"library-contents/guide/#ngdb.guide.NortonGuide.menu_count","title":"menu_count  <code>property</code>","text":"<pre><code>menu_count\n</code></pre> <p>The count of menu options in the guide.</p>"},{"location":"library-contents/guide/#ngdb.guide.NortonGuide.menus","title":"menus  <code>property</code>","text":"<pre><code>menus\n</code></pre> <p>The menus for the guide.</p>"},{"location":"library-contents/guide/#ngdb.guide.NortonGuide.path","title":"path  <code>property</code>","text":"<pre><code>path\n</code></pre> <p>The path to the guide.</p>"},{"location":"library-contents/guide/#ngdb.guide.NortonGuide.title","title":"title  <code>property</code>","text":"<pre><code>title\n</code></pre> <p>The title of the guide.</p>"},{"location":"library-contents/guide/#ngdb.guide.NortonGuide.__del__","title":"__del__","text":"<pre><code>__del__()\n</code></pre> <p>Ensure we close the handle to the guide if we're deleted.</p>"},{"location":"library-contents/guide/#ngdb.guide.NortonGuide.__enter__","title":"__enter__","text":"<pre><code>__enter__()\n</code></pre> <p>Handle entry to context.</p>"},{"location":"library-contents/guide/#ngdb.guide.NortonGuide.__exit__","title":"__exit__","text":"<pre><code>__exit__(*_)\n</code></pre> <p>Handle exit from context.</p>"},{"location":"library-contents/guide/#ngdb.guide.NortonGuide.__iter__","title":"__iter__","text":"<pre><code>__iter__()\n</code></pre> <p>Allow iterating through every entry in the guide.</p> <p>Yields:</p> Type Description <code>Short | Long</code> <p>An entry from the guide. Either a <code>Short</code> or a <code>Long</code> entry.</p> <p>Raises:</p> Type Description <code>UnknownEntryType</code> <p>If an unknown type of entry is encountered.</p>"},{"location":"library-contents/guide/#ngdb.guide.NortonGuide.__repr__","title":"__repr__","text":"<pre><code>__repr__()\n</code></pre> <p>The string representation of the guide.</p> <p>Returns:</p> Type Description <code>str</code> <p>A string representation of the guide object.</p>"},{"location":"library-contents/guide/#ngdb.guide.NortonGuide.__str__","title":"__str__","text":"<pre><code>__str__()\n</code></pre> <p>The string representation of the guide.</p> <p>Returns:</p> Type Description <code>str</code> <p>The guide's full path/file name as a string.</p>"},{"location":"library-contents/guide/#ngdb.guide.NortonGuide.close","title":"close","text":"<pre><code>close()\n</code></pre> <p>Close the guide, if it's open.</p> Note <p>Closing the guide when it isn't open is a non-op. It's always safe to make this call.</p>"},{"location":"library-contents/guide/#ngdb.guide.NortonGuide.goto","title":"goto","text":"<pre><code>goto(pos)\n</code></pre> <p>Go to a specific location in the guide.</p> <p>Parameters:</p> Name Type Description Default <code>int</code> <p>The position to go to.</p> required <p>Returns:</p> Type Description <code>Self</code> <p>Self.</p>"},{"location":"library-contents/guide/#ngdb.guide.NortonGuide.goto(pos)","title":"<code>pos</code>","text":""},{"location":"library-contents/guide/#ngdb.guide.NortonGuide.goto_first","title":"goto_first","text":"<pre><code>goto_first()\n</code></pre> <p>Go to the first entry in the guide.</p> <p>Returns:</p> Type Description <code>Self</code> <p>Self.</p>"},{"location":"library-contents/guide/#ngdb.guide.NortonGuide.load","title":"load","text":"<pre><code>load()\n</code></pre> <p>Load the entry at the current position.</p> <p>Returns:</p> Type Description <code>Short | Long</code> <p>The entry found at the current position. Either a <code>Short</code> or a <code>Long</code> entry.</p> <p>Raises:</p> Type Description <code>NGEOF</code> <p>If we attempt to load when at EOF.</p> <code>UnknownEntryType</code> <p>If the type wasn't an entry.</p>"},{"location":"library-contents/guide/#ngdb.guide.NortonGuide.maybe","title":"maybe  <code>staticmethod</code>","text":"<pre><code>maybe(candidate)\n</code></pre> <p>Does the given file look like it might be a Norton Guide?</p> <p>Parameters:</p> Name Type Description Default <code>str | Path</code> <p>The file to consider.</p> required <p>Returns:</p> Type Description <code>bool</code> <p><code>True</code> if the file might be a Norton Guide, <code>False</code> if not.</p> Notes <p>The content of the file is not looked at here, just the name of the file. This means it can be used as a fast initial filter. To see if a file is really a Norton Guide open it with <code>NortonGuide</code> and check <code>is_a</code>.</p> <p>Also keep in mind that even the existence of the file isn't taken into account.</p>"},{"location":"library-contents/guide/#ngdb.guide.NortonGuide.maybe(candidate)","title":"<code>candidate</code>","text":""},{"location":"library-contents/guide/#ngdb.guide.NortonGuide.skip","title":"skip","text":"<pre><code>skip()\n</code></pre> <p>Skip the current entry.</p> <p>Returns:</p> Type Description <code>Self</code> <p>Self.</p> <p>Raises:</p> Type Description <code>NGEOF</code> <p>If we attempt to skip when at EOF.</p>"},{"location":"library-contents/guide/#ngdb.guide.not_eof","title":"not_eof","text":"<pre><code>not_eof(meth)\n</code></pre> <p>Decorator to ensure a guide isn't at EOF before executing a method.</p> <p>Parameters:</p> Name Type Description Default <code>Callable[..., EOFResult]</code> <p>The method fo protect.</p> required <p>Returns:</p> Type Description <code>Callable[..., EOFResult]</code> <p>The guard.</p> <p>This decorator is used as part of <code>NortonGuide</code>, to decorate functions that should test for being <code>eof</code> before the work of the method is done. If the guide is <code>eof</code> <code>NGEOF</code> will be raised.</p>"},{"location":"library-contents/guide/#ngdb.guide.not_eof(meth)","title":"<code>meth</code>","text":""},{"location":"library-contents/link/","title":"ngdb.link","text":"<p>Provides a class that links some text to an offset in a guide.</p>"},{"location":"library-contents/link/#ngdb.link.Link","title":"Link","text":"<p>               Bases: <code>NamedTuple</code></p> <p>A link within a Norton Guide, comprising of some text and an offset.</p>"},{"location":"library-contents/link/#ngdb.link.Link.has_offset","title":"has_offset  <code>property</code>","text":"<pre><code>has_offset\n</code></pre> <p>Does this link have an associated offset into the guide?</p>"},{"location":"library-contents/link/#ngdb.link.Link.offset","title":"offset  <code>instance-attribute</code>","text":"<pre><code>offset\n</code></pre> <p>The offset of the link.</p>"},{"location":"library-contents/link/#ngdb.link.Link.text","title":"text  <code>instance-attribute</code>","text":"<pre><code>text\n</code></pre> <p>The text of the link.</p>"},{"location":"library-contents/link/#ngdb.link.Link.__bool__","title":"__bool__","text":"<pre><code>__bool__()\n</code></pre> <p>Does the link actually link anywhere?</p> <p>Returns:</p> Type Description <code>bool</code> <p><code>True</code> if the link links somewhere, <code>False</code> if not.</p>"},{"location":"library-contents/link/#ngdb.link.Link.__int__","title":"__int__","text":"<pre><code>__int__()\n</code></pre> <p>Returns the offset of the link.</p> <p>Returns:</p> Type Description <code>int</code> <p>The offset for the link.</p>"},{"location":"library-contents/link/#ngdb.link.Link.__str__","title":"__str__","text":"<pre><code>__str__()\n</code></pre> <p>Returns the text of the link.</p> <p>Returns:</p> Type Description <code>str</code> <p>The text for the link.</p>"},{"location":"library-contents/menu/","title":"ngdb.menu","text":"<p>Code for loading and holding guide menus.</p>"},{"location":"library-contents/menu/#ngdb.menu.Menu","title":"Menu","text":"<pre><code>Menu(guide)\n</code></pre> <p>               Bases: <code>PromptCollection</code></p> <p>Class that loads and holds the details of a menu in the guide.</p> <p>Parameters:</p> Name Type Description Default <code>GuideReader</code> <p>The reader object for the guide.</p> required"},{"location":"library-contents/menu/#ngdb.menu.Menu(guide)","title":"<code>guide</code>","text":""},{"location":"library-contents/menu/#ngdb.menu.Menu.title","title":"title  <code>property</code>","text":"<pre><code>title\n</code></pre> <p>The title of the menu.</p>"},{"location":"library-contents/menu/#ngdb.menu.Menu.__repr__","title":"__repr__","text":"<pre><code>__repr__()\n</code></pre> <p>Get the string representation of the menu.</p> <p>Returns:</p> Type Description <code>str</code> <p>The title of the menu.</p>"},{"location":"library-contents/menu/#ngdb.menu.Menu.__str__","title":"__str__","text":"<pre><code>__str__()\n</code></pre> <p>Get the string representation of the menu.</p> <p>Returns:</p> Type Description <code>str</code> <p>The title of the menu.</p>"},{"location":"library-contents/parser/","title":"ngdb.parser","text":"<p>Norton Guide parser for the text inside a guide.</p>"},{"location":"library-contents/parser/#ngdb.parser.CTRL_CHAR","title":"CTRL_CHAR  <code>module-attribute</code>","text":"<pre><code>CTRL_CHAR = '^'\n</code></pre> <p>The control character that marks an upcoming attribute.</p>"},{"location":"library-contents/parser/#ngdb.parser.BaseParser","title":"BaseParser","text":"<pre><code>BaseParser(line)\n</code></pre> <p>The base text parsing class.</p> <p>Parameters:</p> Name Type Description Default <code>str | Link</code> <p>The raw string to parse.</p> required"},{"location":"library-contents/parser/#ngdb.parser.BaseParser(line)","title":"<code>line</code>","text":""},{"location":"library-contents/parser/#ngdb.parser.BaseParser.bold","title":"bold","text":"<pre><code>bold()\n</code></pre> <p>Handle being asked to go to bold mode.</p>"},{"location":"library-contents/parser/#ngdb.parser.BaseParser.char","title":"char","text":"<pre><code>char(char)\n</code></pre> <p>Handle an individual character value.</p> <p>Parameters:</p> Name Type Description Default <code>int</code> <p>The character value to handle.</p> required"},{"location":"library-contents/parser/#ngdb.parser.BaseParser.char(char)","title":"<code>char</code>","text":""},{"location":"library-contents/parser/#ngdb.parser.BaseParser.colour","title":"colour","text":"<pre><code>colour(colour)\n</code></pre> <p>Handle the given colour value.</p> <p>Parameters:</p> Name Type Description Default <code>int</code> <p>The colour value to handle.</p> required"},{"location":"library-contents/parser/#ngdb.parser.BaseParser.colour(colour)","title":"<code>colour</code>","text":""},{"location":"library-contents/parser/#ngdb.parser.BaseParser.normal","title":"normal","text":"<pre><code>normal()\n</code></pre> <p>Handle being asked to go to normal mode.</p>"},{"location":"library-contents/parser/#ngdb.parser.BaseParser.reverse","title":"reverse","text":"<pre><code>reverse()\n</code></pre> <p>Handle being asked to go to reverse mode.</p>"},{"location":"library-contents/parser/#ngdb.parser.BaseParser.text","title":"text","text":"<pre><code>text(text)\n</code></pre> <p>Handle the given text.</p> <p>Parameters:</p> Name Type Description Default <code>str</code> <p>The text to handle.</p> required"},{"location":"library-contents/parser/#ngdb.parser.BaseParser.text(text)","title":"<code>text</code>","text":""},{"location":"library-contents/parser/#ngdb.parser.BaseParser.unbold","title":"unbold","text":"<pre><code>unbold()\n</code></pre> <p>Handle being asked to go out of bold mode.</p>"},{"location":"library-contents/parser/#ngdb.parser.BaseParser.underline","title":"underline","text":"<pre><code>underline()\n</code></pre> <p>Handle being asked to go in underline mode.</p>"},{"location":"library-contents/parser/#ngdb.parser.BaseParser.unreverse","title":"unreverse","text":"<pre><code>unreverse()\n</code></pre> <p>Handle being asked to go out of reverse mode.</p>"},{"location":"library-contents/parser/#ngdb.parser.BaseParser.ununderline","title":"ununderline","text":"<pre><code>ununderline()\n</code></pre> <p>Handle being asked to go out of underline mode.</p>"},{"location":"library-contents/parser/#ngdb.parser.MarkupText","title":"MarkupText","text":"<pre><code>MarkupText(line)\n</code></pre> <p>               Bases: <code>PlainText</code>, <code>ABC</code></p> <p>Read a line of Norton Guide text and mark up with start/end tags.</p> <p>This is an abstract base class for other parser classes that will implement start and end tags where necessary.</p>"},{"location":"library-contents/parser/#ngdb.parser.MarkupText.begin_markup","title":"begin_markup","text":"<pre><code>begin_markup(cls)\n</code></pre> <p>Start a section of markup.</p> <p>Parameters:</p> Name Type Description Default <code>str</code> <p>The class for the markup.</p> required Note <p>As a side-effect of calling on this, the <code>close_markup</code> for the same class will be placed on an internal stack, for use when <code>end_markup</code> is called.</p>"},{"location":"library-contents/parser/#ngdb.parser.MarkupText.begin_markup(cls)","title":"<code>cls</code>","text":""},{"location":"library-contents/parser/#ngdb.parser.MarkupText.close_markup","title":"close_markup  <code>abstractmethod</code>","text":"<pre><code>close_markup(cls)\n</code></pre> <p>Close markup for the given class.</p> <p>Parameters:</p> Name Type Description Default <code>str</code> <p>The class of thing to close the markup for.</p> required <p>Returns:</p> Type Description <code>str</code> <p>The closing markup text.</p>"},{"location":"library-contents/parser/#ngdb.parser.MarkupText.close_markup(cls)","title":"<code>cls</code>","text":""},{"location":"library-contents/parser/#ngdb.parser.MarkupText.end_markup","title":"end_markup","text":"<pre><code>end_markup()\n</code></pre> <p>End a section of markup.</p>"},{"location":"library-contents/parser/#ngdb.parser.MarkupText.normal","title":"normal","text":"<pre><code>normal()\n</code></pre> <p>Handle being asked to go to normal mode.</p> Note <p>Internally this also clears the whole stack of closing tags.</p>"},{"location":"library-contents/parser/#ngdb.parser.MarkupText.open_markup","title":"open_markup  <code>abstractmethod</code>","text":"<pre><code>open_markup(cls)\n</code></pre> <p>Open markup for the given class.</p> <p>Parameters:</p> Name Type Description Default <code>str</code> <p>The class of thing to open the markup for.</p> required <p>Returns:</p> Type Description <code>str</code> <p>The opening markup text.</p>"},{"location":"library-contents/parser/#ngdb.parser.MarkupText.open_markup(cls)","title":"<code>cls</code>","text":""},{"location":"library-contents/parser/#ngdb.parser.ParseState","title":"ParseState","text":"<pre><code>ParseState(line)\n</code></pre> <p>Raw text parsing state tracking class.</p> <p>Parameters:</p> Name Type Description Default <code>str</code> <p>The line to work on.</p> required"},{"location":"library-contents/parser/#ngdb.parser.ParseState(line)","title":"<code>line</code>","text":""},{"location":"library-contents/parser/#ngdb.parser.ParseState.ctrl","title":"ctrl  <code>instance-attribute</code>","text":"<pre><code>ctrl = find(CTRL_CHAR)\n</code></pre> <p>The location of the next control marker.</p>"},{"location":"library-contents/parser/#ngdb.parser.ParseState.ctrl_id","title":"ctrl_id  <code>property</code>","text":"<pre><code>ctrl_id\n</code></pre> <p>The current control ID.</p>"},{"location":"library-contents/parser/#ngdb.parser.ParseState.last_attr","title":"last_attr  <code>instance-attribute</code>","text":"<pre><code>last_attr = -1\n</code></pre> <p>The last attribute encountered.</p>"},{"location":"library-contents/parser/#ngdb.parser.ParseState.mode","title":"mode  <code>instance-attribute</code>","text":"<pre><code>mode = NORMAL\n</code></pre> <p>The current mode.</p>"},{"location":"library-contents/parser/#ngdb.parser.ParseState.raw","title":"raw  <code>instance-attribute</code>","text":"<pre><code>raw = line\n</code></pre> <p>The current raw text that's left to handle.</p>"},{"location":"library-contents/parser/#ngdb.parser.ParseState.work_left","title":"work_left  <code>property</code>","text":"<pre><code>work_left\n</code></pre> <p>Is there any work left to do?</p>"},{"location":"library-contents/parser/#ngdb.parser.PlainText","title":"PlainText","text":"<pre><code>PlainText(line)\n</code></pre> <p>               Bases: <code>BaseParser</code></p> <p>Read a line of Norton Guide text as plain text.</p>"},{"location":"library-contents/parser/#ngdb.parser.PlainText.__str__","title":"__str__","text":"<pre><code>__str__()\n</code></pre> <p>Return the plain text of the line.</p> <p>Returns:</p> Type Description <code>str</code> <p>The parsed line, as plan text.</p>"},{"location":"library-contents/parser/#ngdb.parser.RichText","title":"RichText","text":"<pre><code>RichText(line)\n</code></pre> <p>               Bases: <code>MarkupText</code></p> <p>Read a line of Norton Guide text and mark up with Rich console markup.</p> Note <p>This is implemented in a way that doesn't require that Rich is a dependency of this library. This is provided here as a test and a handy example, and one that uses Rich's plain text BBCode-a-like markup.</p>"},{"location":"library-contents/parser/#ngdb.parser.RichText.COLOUR_MAP","title":"COLOUR_MAP  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>COLOUR_MAP = {\n    1: 4,\n    3: 6,\n    4: 1,\n    6: 3,\n    9: 21,\n    11: 14,\n    12: 196,\n    14: 11,\n}\n</code></pre> <p>DOS to Rich colour mapping. This is just the exceptions.</p>"},{"location":"library-contents/parser/#ngdb.parser.RichText.map_colour","title":"map_colour  <code>classmethod</code>","text":"<pre><code>map_colour(colour)\n</code></pre> <p>Map a DOS colour into a similar colour from Rich.</p> <p>Parameters:</p> Name Type Description Default <code>int</code> <p>The DOS colour to map from.</p> required <p>Returns:</p> Type Description <code>int</code> <p>The mapped colour.</p>"},{"location":"library-contents/parser/#ngdb.parser.RichText.map_colour(colour)","title":"<code>colour</code>","text":""},{"location":"library-contents/parser/#ngdb.parser.TextMode","title":"TextMode","text":"<p>               Bases: <code>Enum</code></p> <p>Types of text mode used when parsing a Norton Guide line.</p>"},{"location":"library-contents/parser/#ngdb.parser.TextMode.ATTR","title":"ATTR  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ATTR = auto()\n</code></pre> <p>Raw colour attribute.</p>"},{"location":"library-contents/parser/#ngdb.parser.TextMode.BOLD","title":"BOLD  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>BOLD = auto()\n</code></pre> <p>Bold text.</p>"},{"location":"library-contents/parser/#ngdb.parser.TextMode.NORMAL","title":"NORMAL  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>NORMAL = auto()\n</code></pre> <p>Normal text.</p>"},{"location":"library-contents/parser/#ngdb.parser.TextMode.REVERSE","title":"REVERSE  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>REVERSE = auto()\n</code></pre> <p>Reverse text.</p>"},{"location":"library-contents/parser/#ngdb.parser.TextMode.UNDERLINE","title":"UNDERLINE  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>UNDERLINE = auto()\n</code></pre> <p>Underlined text.</p>"},{"location":"library-contents/prompts/","title":"ngdb.prompts","text":"<p>Provides a class that is the base for a prompt collection.</p>"},{"location":"library-contents/prompts/#ngdb.prompts.PromptCollection","title":"PromptCollection","text":"<pre><code>PromptCollection()\n</code></pre> <p>Base class for classes that contain prompt/offset collections.</p>"},{"location":"library-contents/prompts/#ngdb.prompts.PromptCollection.MAX_PROMPT_LENGTH","title":"MAX_PROMPT_LENGTH  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>MAX_PROMPT_LENGTH = 128\n</code></pre> <p>The maximum length of a prompt in a guide.</p>"},{"location":"library-contents/prompts/#ngdb.prompts.PromptCollection.offsets","title":"offsets  <code>property</code>","text":"<pre><code>offsets\n</code></pre> <p>The offsets into the guide for each prompt.</p>"},{"location":"library-contents/prompts/#ngdb.prompts.PromptCollection.prompts","title":"prompts  <code>property</code>","text":"<pre><code>prompts\n</code></pre> <p>The prompts in the collection.</p>"},{"location":"library-contents/prompts/#ngdb.prompts.PromptCollection.__bool__","title":"__bool__","text":"<pre><code>__bool__()\n</code></pre> <p>Test if there are any prompts in the collection.</p> <p>Returns:</p> Type Description <code>bool</code> <p><code>True</code> if there are prompts, <code>False</code> if not.</p>"},{"location":"library-contents/prompts/#ngdb.prompts.PromptCollection.__getitem__","title":"__getitem__","text":"<pre><code>__getitem__(prompt)\n</code></pre> <p>Get a prompt/offset pair.</p> <p>Parameters:</p> Name Type Description Default <code>int</code> <p>The prompt to get the details for.</p> required <p>Returns:</p> Type Description <code>Link</code> <p>The requested prompt and its offset.</p>"},{"location":"library-contents/prompts/#ngdb.prompts.PromptCollection.__getitem__(prompt)","title":"<code>prompt</code>","text":""},{"location":"library-contents/prompts/#ngdb.prompts.PromptCollection.__iter__","title":"__iter__","text":"<pre><code>__iter__()\n</code></pre> <p>Get an iterator of prompt and offset pairs.</p> <p>Yields:</p> Type Description <code>Link</code> <p>A link containing the prompt/offset, from the collection.</p>"},{"location":"library-contents/prompts/#ngdb.prompts.PromptCollection.__len__","title":"__len__","text":"<pre><code>__len__()\n</code></pre> <p>Get the number of prompts in the collection.</p> <p>Returns:</p> Type Description <code>int</code> <p>The count of prompts.</p>"},{"location":"library-contents/reader/","title":"ngdb.reader","text":"<p>Class for handling the low-level reading of a Norton Guide database.</p>"},{"location":"library-contents/reader/#ngdb.reader.GuideReader","title":"GuideReader","text":"<pre><code>GuideReader(guide)\n</code></pre> <p>Low-level guide reading class.</p> Note <p>For now, no optimisation has taken place, in many cases the way this class reads data from a guide will be a method that's on the slower side. This is on purpose; it's about readable code that represents the underlying data structure rather than the fastest method of getting data into memory.</p> <p>Once the rest of the library is done and working well this extra bit if docstring will likely be removed because work to improve the speed of this class will finally take place.</p> <p>Parameters:</p> Name Type Description Default <code>Path</code> <p>The guide to open.</p> required"},{"location":"library-contents/reader/#ngdb.reader.GuideReader(guide)","title":"<code>guide</code>","text":""},{"location":"library-contents/reader/#ngdb.reader.GuideReader.RLE_MARKER","title":"RLE_MARKER  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>RLE_MARKER = chr(255)\n</code></pre> <p>The value that marks run-length-encoded spaces.</p>"},{"location":"library-contents/reader/#ngdb.reader.GuideReader.closed","title":"closed  <code>property</code>","text":"<pre><code>closed\n</code></pre> <p>Is the file closed?</p>"},{"location":"library-contents/reader/#ngdb.reader.GuideReader.pos","title":"pos  <code>property</code>","text":"<pre><code>pos\n</code></pre> <p>The current position within the file.</p>"},{"location":"library-contents/reader/#ngdb.reader.GuideReader.close","title":"close","text":"<pre><code>close()\n</code></pre> <p>Close the guide.</p>"},{"location":"library-contents/reader/#ngdb.reader.GuideReader.goto","title":"goto","text":"<pre><code>goto(pos)\n</code></pre> <p>Go to a specific byte position within the guide.</p> <p>Parameters:</p> Name Type Description Default <code>int</code> <p>The position to go to.</p> required <p>Returns:</p> Type Description <code>Self</code> <p>Self.</p>"},{"location":"library-contents/reader/#ngdb.reader.GuideReader.goto(pos)","title":"<code>pos</code>","text":""},{"location":"library-contents/reader/#ngdb.reader.GuideReader.peek_word","title":"peek_word","text":"<pre><code>peek_word(decrypt=True)\n</code></pre> <p>Read a two-byte word but don't move the file location.</p> <p>Parameters:</p> Name Type Description Default <code>bool</code> <p>Should the value be decrypted?</p> <code>True</code> <p>Returns:</p> Type Description <code>int</code> <p>The word value read.</p>"},{"location":"library-contents/reader/#ngdb.reader.GuideReader.peek_word(decrypt)","title":"<code>decrypt</code>","text":""},{"location":"library-contents/reader/#ngdb.reader.GuideReader.read_byte","title":"read_byte","text":"<pre><code>read_byte(decrypt=True)\n</code></pre> <p>Read a byte from the guide.</p> <p>Parameters:</p> Name Type Description Default <code>bool</code> <p>Should the value be decrypted?</p> <code>True</code> <p>Returns:</p> Type Description <code>int</code> <p>The byte value read.</p>"},{"location":"library-contents/reader/#ngdb.reader.GuideReader.read_byte(decrypt)","title":"<code>decrypt</code>","text":""},{"location":"library-contents/reader/#ngdb.reader.GuideReader.read_long","title":"read_long","text":"<pre><code>read_long(decrypt=True)\n</code></pre> <p>Read a four-byte long word from the guide.</p> <p>Parameters:</p> Name Type Description Default <code>bool</code> <p>Should the value be decrypted?</p> <code>True</code> <p>Returns:</p> Type Description <code>int</code> <p>The long integer value read.</p>"},{"location":"library-contents/reader/#ngdb.reader.GuideReader.read_long(decrypt)","title":"<code>decrypt</code>","text":""},{"location":"library-contents/reader/#ngdb.reader.GuideReader.read_offset","title":"read_offset","text":"<pre><code>read_offset()\n</code></pre> <p>Read an offset value from the guide.</p> <p>Returns:</p> Type Description <code>int</code> <p>The offset value read.</p> Note <p>This function ensures that an offset value that means 'there is no offset' returns as <code>-1</code>.</p>"},{"location":"library-contents/reader/#ngdb.reader.GuideReader.read_str","title":"read_str","text":"<pre><code>read_str(length, decrypt=True)\n</code></pre> <p>Read a fixed-length string from the guide.</p> <p>Parameters:</p> Name Type Description Default <code>int</code> <p>The length of the string to read.</p> required <code>bool</code> <p>Should the string be decrypted?</p> <code>True</code> <p>Returns:</p> Type Description <code>str</code> <p>The string value read.</p>"},{"location":"library-contents/reader/#ngdb.reader.GuideReader.read_str(length)","title":"<code>length</code>","text":""},{"location":"library-contents/reader/#ngdb.reader.GuideReader.read_str(decrypt)","title":"<code>decrypt</code>","text":""},{"location":"library-contents/reader/#ngdb.reader.GuideReader.read_strz","title":"read_strz","text":"<pre><code>read_strz(length, decrypt=True)\n</code></pre> <p>Read a nul-terminated string from the guide.</p> <p>This is similar to <code>read_str</code>, but it will read only as far as the first <code>nul</code> it encounters, within the bounds of <code>length</code>, and the file read location will be correctly settled to take this into account.</p> <p>Parameters:</p> Name Type Description Default <code>int</code> <p>The maximum length of the string to read.</p> required <code>bool</code> <p>Should the string be decrypted?</p> <code>True</code> <p>Returns:</p> Type Description <code>str</code> <p>The string value read.</p>"},{"location":"library-contents/reader/#ngdb.reader.GuideReader.read_strz(length)","title":"<code>length</code>","text":""},{"location":"library-contents/reader/#ngdb.reader.GuideReader.read_strz(decrypt)","title":"<code>decrypt</code>","text":""},{"location":"library-contents/reader/#ngdb.reader.GuideReader.read_word","title":"read_word","text":"<pre><code>read_word(decrypt=True)\n</code></pre> <p>Read a two-byte word from the guide.</p> <p>Parameters:</p> Name Type Description Default <code>bool</code> <p>Should the value be decrypted?</p> <code>True</code> <p>Returns:</p> Type Description <code>int</code> <p>The word value read.</p>"},{"location":"library-contents/reader/#ngdb.reader.GuideReader.read_word(decrypt)","title":"<code>decrypt</code>","text":""},{"location":"library-contents/reader/#ngdb.reader.GuideReader.skip","title":"skip","text":"<pre><code>skip(count=1)\n</code></pre> <p>Skip a number of bytes in the guide.</p> <p>Parameters:</p> Name Type Description Default <code>int</code> <p>The optional number of bytes to skip.</p> <code>1</code> <p>Returns:</p> Type Description <code>Self</code> <p>Self.</p>"},{"location":"library-contents/reader/#ngdb.reader.GuideReader.skip(count)","title":"<code>count</code>","text":""},{"location":"library-contents/reader/#ngdb.reader.GuideReader.skip_entry","title":"skip_entry","text":"<pre><code>skip_entry()\n</code></pre> <p>Skip a whole entry in the guide.</p> <p>Returns:</p> Type Description <code>Self</code> <p>Self.</p>"},{"location":"library-contents/reader/#ngdb.reader.GuideReader.unrle","title":"unrle  <code>classmethod</code>","text":"<pre><code>unrle(rle_text)\n</code></pre> <p>Un-run-length-encode the given string.</p> <p>Parameters:</p> Name Type Description Default <code>str</code> <p>The text that needs expanding.</p> required <p>Returns:</p> Type Description <code>str</code> <p>The given text with all RLE components expanded.</p> Note <p>Norton Guide database files use a very simple form of run-length-encoding for spaces. Simply put, if you find a byte in a string that is <code>0xFF</code>, then the next byte is the number of spaces to insert into the string at this point. I've also found that <code>0xFF</code> followed by <code>0xFF</code> seems to mean you should insert a literal <code>0xFF</code> (I think), although I've found that using a literal space makes more sense.</p>"},{"location":"library-contents/reader/#ngdb.reader.GuideReader.unrle(rle_text)","title":"<code>rle_text</code>","text":""},{"location":"library-contents/seealso/","title":"ngdb.seealso","text":"<p>See-also loading/holding code.</p>"},{"location":"library-contents/seealso/#ngdb.seealso.SeeAlso","title":"SeeAlso","text":"<pre><code>SeeAlso(guide, load)\n</code></pre> <p>               Bases: <code>PromptCollection</code></p> <p>Class to load and hold all the see alsos for a long entry.</p> <p>Parameters:</p> Name Type Description Default <code>GuideReader</code> <p>The reader object for the guide.</p> required <code>bool</code> <p>Should we bother trying to load any?</p> required Note <p>The <code>load</code> parameter might look a bit daft, and it is, but a Norton Guide has a flag to say if there are any see-also entries and a count value later on, which won't be there and won't be 0 if the flag is 0. So... we pass the flag in here and just have a see-also collection that has nothing in it.</p> <p>I could, of course, make the use of this class optional but that feels icky.</p>"},{"location":"library-contents/seealso/#ngdb.seealso.SeeAlso(guide)","title":"<code>guide</code>","text":""},{"location":"library-contents/seealso/#ngdb.seealso.SeeAlso(load)","title":"<code>load</code>","text":""},{"location":"library-contents/seealso/#ngdb.seealso.SeeAlso.MAX_SEE_ALSO","title":"MAX_SEE_ALSO  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>MAX_SEE_ALSO = 20\n</code></pre> <p>Max number of see also items we'll handle.</p> <p>This is the limit published in the Expert Help Compiler manual and, while this limit isn't really needed in this code, it does help guard against corrupt guides.</p>"},{"location":"library-contents/types/","title":"ngdb.types","text":"<p>Defines helpful types and values for the library..</p>"},{"location":"library-contents/types/#ngdb.types.EntryType","title":"EntryType","text":"<p>               Bases: <code>Enum</code></p> <p>Types of entry in a guide.</p>"},{"location":"library-contents/types/#ngdb.types.EntryType.LONG","title":"LONG  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>LONG = 1\n</code></pre> <p>The record ID for a long entry in a Norton Guide database.</p>"},{"location":"library-contents/types/#ngdb.types.EntryType.MENU","title":"MENU  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>MENU = 2\n</code></pre> <p>The record ID for a menu in a Norton Guide database.</p>"},{"location":"library-contents/types/#ngdb.types.EntryType.SHORT","title":"SHORT  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>SHORT = 0\n</code></pre> <p>The record ID for a short entry in a Norton Guide database.</p>"},{"location":"library-contents/types/#ngdb.types.EntryType.is_long","title":"is_long  <code>classmethod</code>","text":"<pre><code>is_long(test)\n</code></pre> <p>Is the value the ID of a long entry?</p> <p>Parameters:</p> Name Type Description Default <code>int</code> <p>The value to test.</p> required <p>Returns:</p> Type Description <code>bool</code> <p><code>True</code> if it is a long, <code>False</code> if not.</p>"},{"location":"library-contents/types/#ngdb.types.EntryType.is_long(test)","title":"<code>test</code>","text":""},{"location":"library-contents/types/#ngdb.types.EntryType.is_menu","title":"is_menu  <code>classmethod</code>","text":"<pre><code>is_menu(test)\n</code></pre> <p>Is the value the ID of a menu?</p> <p>Parameters:</p> Name Type Description Default <code>int</code> <p>The value to test.</p> required <p>Returns:</p> Type Description <code>bool</code> <p><code>True</code> if it is a menu, <code>False</code> if not.</p>"},{"location":"library-contents/types/#ngdb.types.EntryType.is_menu(test)","title":"<code>test</code>","text":""},{"location":"library-contents/types/#ngdb.types.EntryType.is_short","title":"is_short  <code>classmethod</code>","text":"<pre><code>is_short(test)\n</code></pre> <p>Is the value the ID of a short entry?</p> <p>Parameters:</p> Name Type Description Default <code>int</code> <p>The value to test.</p> required <p>Returns:</p> Type Description <code>bool</code> <p><code>True</code> if it is a short, <code>False</code> if not.</p>"},{"location":"library-contents/types/#ngdb.types.EntryType.is_short(test)","title":"<code>test</code>","text":""},{"location":"library-contents/types/#ngdb.types.NGDBError","title":"NGDBError","text":"<p>               Bases: <code>Exception</code></p> <p>Base exception of all exceptions in the library.</p>"},{"location":"library-contents/types/#ngdb.types.NGEOF","title":"NGEOF","text":"<p>               Bases: <code>NGDBError</code></p> <p>Type of an exception thrown when doing things at or past EOF.</p>"},{"location":"library-contents/types/#ngdb.types.UnknownEntryType","title":"UnknownEntryType","text":"<p>               Bases: <code>NGEOF</code></p> <p>Type of an exception when faced with an unknown entry type.</p> Note <p>This class is a subclass of <code>NGEOF</code> so if you are writing code that walks a guide and you want to stop once an unknown guide type is found (often indicating a corrupted guide), you can safely catch <code>NGEOF</code> and this exception will be handled.</p>"}]}